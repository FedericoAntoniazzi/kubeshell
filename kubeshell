#!/bin/bash

set -o nounset
set -o pipefail
stty -echoctl # Hide ^C

trap quit_kubeshell SIGINT

function quit_kubeshell() {
	echo -e "\rExiting kubeshell..."
	exit 0
}

function show_kubeshell_help() {
	echo -e "Usage: kubeshell"
	echo -e "kubeshell is an interactive shell for running kubectl commands."
	echo -e
	echo -e "Note: Kubeshell it's just an interactive shell built on top of kubectl."
	echo -e "\tTo change its behavior change kubectl settings"
	echo -e
	echo -e "Available flags:"
	echo -e "  -h, --help\t\tDisplay this help"
}

function interactive_loop() {
	while true; do
		read -erp "kubeshell$ " kubectl_command

		case "$kubectl_command" in
			"exit"|"quit"|":q")
				quit_kubeshell
				;;
			*)
				# shellcheck disable=SC2086
				kubectl $kubectl_command
				;;
		esac
	done
}

function parse_args() {
	while [[ $# -gt 0 ]]; do

		key="$1"

		case $key in
			-h|--help)
				show_kubeshell_help
				exit 0
				;;
			-n|-ns|--namespace)
				local NAMESPACE="$2"
				echo "> Setting namespace/$NAMESPACE"
				kubectl config set-context --current --namespace="$NAMESPACE"
				shift
				shift
				;;
			*)
				# Ignore unknown argument
				shift
				;;
		esac
	done
}

parse_args "$@"
interactive_loop
